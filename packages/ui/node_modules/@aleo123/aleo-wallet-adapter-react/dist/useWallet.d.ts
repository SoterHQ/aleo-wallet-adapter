import { Adapter, DecryptPermission, MessageSignerWalletAdapterProps, WalletAdapterNetwork, WalletName, WalletReadyState } from '@aleo123/aleo-wallet-adapter-base';
export interface Wallet {
    adapter: Adapter;
    readyState: WalletReadyState;
}
export interface WalletContextState {
    autoConnect: boolean;
    wallets: Wallet[];
    wallet: Wallet | null;
    publicKey: string | null;
    viewKey: string | null;
    connecting: boolean;
    connected: boolean;
    disconnecting: boolean;
    select(walletName: WalletName): void;
    connect(decryptPermission: DecryptPermission, network: WalletAdapterNetwork): Promise<void>;
    disconnect(): Promise<void>;
    signMessage: MessageSignerWalletAdapterProps['signMessage'] | undefined;
    decrypt: MessageSignerWalletAdapterProps['decrypt'] | undefined;
    requestViewKey: MessageSignerWalletAdapterProps['requestViewKey'] | undefined;
    requestRecords: MessageSignerWalletAdapterProps['requestRecords'] | undefined;
    requestTransaction: MessageSignerWalletAdapterProps['requestTransaction'] | undefined;
    requestBulkTransactions: MessageSignerWalletAdapterProps['requestBulkTransactions'] | undefined;
    requestDeploy: MessageSignerWalletAdapterProps['requestDeploy'] | undefined;
    transactionStatus: MessageSignerWalletAdapterProps['transactionStatus'] | undefined;
}
export declare const WalletContext: any;
export declare function useWallet(): WalletContextState;
